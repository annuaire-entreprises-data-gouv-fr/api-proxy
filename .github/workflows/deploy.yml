name: Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy-staging:
    name: Deploy - staging
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MACHINE_USER_PRIVATE_KEY}}
          SSH_HOST: ${{ secrets.SSH_HOST_STAGING }}

      - name: Deploy to production
        run: ssh -i ./deploy.key www-data@$SSH_HOST 'sh /opt/apps/rncs-api-proxy/rncs-api-proxy-deploy.sh'
        env:
          SSH_HOST: ${{ secrets.SSH_HOST_STAGING }}

  deploy-production:
    name: Deploy - production
    runs-on: ubuntu-latest
    needs: [deploy-staging]

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ./deploy.key
          sudo chmod 600 ./deploy.key
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts
        shell: bash
        env:
          SSH_PRIVATE_KEY: ${{secrets.SSH_MACHINE_USER_PRIVATE_KEY}}
          SSH_HOST: ${{ secrets.SSH_HOST_PRODUCTION }}

      - name: Deploy to production
        run: ssh -i ./deploy.key www-data@$SSH_HOST 'sh /opt/apps/rncs-api-proxy/rncs-api-proxy-deploy.sh'
        env:
          SSH_HOST: ${{ secrets.SSH_HOST_PRODUCTION }}
