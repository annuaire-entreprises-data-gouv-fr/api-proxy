# This workflow will do a clean install of node dependencies, build the source code and run tests

name: 'Pre-merge checks'
permissions:
  contents: read

on:
  pull_request:
    types: [review_requested]

# Be extremely careful as the env variables defined here are accessible by all the actions of the workflow.
# For critical env variable, declare it within the action.
env:
  node-version: 20.x
jobs:
  dependencies:
    name: 'Install dependencies'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Cache node modules
        uses: actions/cache@v4
        id: restore-dependencies
        env:
          cache-name: cache-node-modules
        with:
          # Cache node_modules. To cache global, you may try ~/.npm
          path: ./node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-cache-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm i

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Load node modules
        uses: actions/cache@v4
        id: restore-dependencies
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Run linter
        run: npm run lint

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Load node modules
        uses: actions/cache@v4
        id: restore-dependencies
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Build
        run: npm run build
      - name: Cache build
        uses: actions/cache@v4
        id: restore-build
        with:
          path: ./*
          key: ${{ github.sha }}

  tests:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: [dependencies]

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ env.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.node-version }}
      - name: Load node modules
        uses: actions/cache@v4
        id: restore-dependencies
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-npm-cache-${{ hashFiles('**/package-lock.json') }}
      - name: Run unit tests
        run: |
          npm run test
